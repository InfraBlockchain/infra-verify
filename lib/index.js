var e,r=require("did-jwt"),t=require("did-jwt-vc"),i=require("did-resolver"),n=require("infra-did-resolver"),o=(e=require("infra-did-js"))&&"object"==typeof e&&"default"in e?e.default:e;function s(){return(s=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e}).apply(this,arguments)}module.exports=function(){function e(e){this.resolver=e.resolver?e.resolver:new i.Resolver(n.getResolver(e.networkConfig)),this.did=e.did?e.did:o.createPubKeyDIDsecp256k1("01").did,this.challenge="",this.knownIssuers=e.knownIssuers}var a=e.prototype;return a.ready=function(){return this.challenge=this.generateChallenge(),{challenge:this.challenge,aud:this.did}},a.generateChallenge=function(){return o.createPubKeyDIDsecp256k1("01").did},a.getVPClaims=function(e){var t=this;return r.decodeJWT(e).payload.vp.verifiableCredential.map(function(e){return t.getVCClaims(e)}).reduce(function(e,r){return s({},r,e)},{})},a.getVCClaims=function(e){return r.decodeJWT(e).payload.vc.credentialSubject},a.isValid=function(e){try{var t=r.decodeJWT(e);if(t.payload.vp)return Promise.resolve(this.isValidVP(e));if(t.payload.vc)return Promise.resolve(this.isValidVC(e));throw new Error("Unsupported type")}catch(e){return Promise.reject(e)}},a.isValidVP=function(e){try{var r=this;return Promise.resolve(t.verifyPresentation(e,r.resolver,{challenge:r.challenge,audience:r.did})).then(function(e){var t=e.payload.vp.VerifiedCredential,i=e.payload.signer;if(r.isRevoked(i.did))throw new Error("Deactivated Presenter");return t.map(function(e){return r.isValidVC(e,i.did)},r).reduce(function(e,r){return e&&r},!0)})}catch(e){return Promise.reject(e)}},a.isValidVC=function(e,r){try{var i=this;return Promise.resolve(t.verifyCredential(e,i.resolver)).then(function(e){if(r&&e.payload.sub!==r)throw new Error("Signer is not the subject of VC");if(i.isKnownIssuer(e.issuer))throw new Error("Unknown Issuer");if(i.isRevoked(e.issuer))throw new Error("Deactivated Issuer");if(i.isRevoked(e.payload.vc.id))throw new Error("Revoked VC");return!0})}catch(e){return Promise.reject(e)}},a.isRevoked=function(e){try{return Promise.resolve(this.resolver.resolve(e)).then(function(e){return!!e.didDocumentMetadata.deactivated})}catch(e){return Promise.reject(e)}},a.isKnownIssuer=function(e){return this.knownIssuers.forEach(function(r){if(r.did===e)return!0}),!1},e}();
//# sourceMappingURL=index.js.map
