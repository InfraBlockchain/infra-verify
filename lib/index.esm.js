import{decodeJWT as e}from"did-jwt";import{verifyPresentation as r,verifyCredential as t}from"did-jwt-vc";import{Resolver as i}from"did-resolver";import{getResolver as n}from"infra-did-resolver";import o from"infra-did-js";function s(){return(s=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e}).apply(this,arguments)}var a=function(){function a(e){this.resolver=e.resolver?e.resolver:new i(n(e.networkConfig)),this.did=e.did?e.did:o.createPubKeyDIDsecp256k1("01").did,this.challenge="",this.knownIssuers=e.knownIssuers}var d=a.prototype;return d.ready=function(){return this.challenge=this.generateChallenge(),{challenge:this.challenge,aud:this.did}},d.generateChallenge=function(){return o.createPubKeyDIDsecp256k1("01").did},d.getVPClaims=function(r){var t=this;return e(r).payload.vp.verifiableCredential.map(function(e){return t.getVCClaims(e)}).reduce(function(e,r){return s({},r,e)},{})},d.getVCClaims=function(r){return e(r).payload.vc.credentialSubject},d.isValid=function(r){try{var t=e(r);if(t.payload.vp)return Promise.resolve(this.isValidVP(r));if(t.payload.vc)return Promise.resolve(this.isValidVC(r));throw new Error("Unsupported type")}catch(e){return Promise.reject(e)}},d.isValidVP=function(e){try{var t=this;return Promise.resolve(r(e,t.resolver,{challenge:t.challenge,audience:t.did})).then(function(e){var r=e.payload.vp.VerifiedCredential,i=e.payload.signer;if(t.isRevoked(i.did))throw new Error("Deactivated Presenter");return r.map(function(e){return t.isValidVC(e,i.did)},t).reduce(function(e,r){return e&&r},!0)})}catch(e){return Promise.reject(e)}},d.isValidVC=function(e,r){try{var i=this;return Promise.resolve(t(e,i.resolver)).then(function(e){if(r&&e.payload.sub!==r)throw new Error("Signer is not the subject of VC");if(i.isKnownIssuer(e.issuer))throw new Error("Unknown Issuer");if(i.isRevoked(e.issuer))throw new Error("Deactivated Issuer");if(i.isRevoked(e.payload.vc.id))throw new Error("Revoked VC");return!0})}catch(e){return Promise.reject(e)}},d.isRevoked=function(e){try{return Promise.resolve(this.resolver.resolve(e)).then(function(e){return!!e.didDocumentMetadata.deactivated})}catch(e){return Promise.reject(e)}},d.isKnownIssuer=function(e){return this.knownIssuers.forEach(function(r){if(r.did===e)return!0}),!1},a}();export default a;
//# sourceMappingURL=index.esm.js.map
